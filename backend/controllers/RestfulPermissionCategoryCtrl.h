/**
 *
 *  RestfulPermissionCategoryCtrl.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include "RestfulPermissionCategoryCtrlBase.h"

#include "PermissionCategory.h"
using namespace drogon;
using namespace drogon_model::saas_restaurant;
/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the permission_category table.
 */

class RestfulPermissionCategoryCtrl : public drogon::HttpController<RestfulPermissionCategoryCtrl>, public RestfulPermissionCategoryCtrlBase
{
public:
  METHOD_LIST_BEGIN
  ADD_METHOD_TO(RestfulPermissionCategoryCtrl::getOne, "/api/permissioncategory/{1}", Get, Options, "AuthFilter");
  ADD_METHOD_TO(RestfulPermissionCategoryCtrl::updateOne, "/api/permissioncategory/{1}", Put, Options, "AuthFilter");
  ADD_METHOD_TO(RestfulPermissionCategoryCtrl::deleteOne, "/api/permissioncategory/{1}", Delete, Options, "AuthFilter");
  ADD_METHOD_TO(RestfulPermissionCategoryCtrl::get, "/api/permissioncategory", Get, Options, "AuthFilter");
  ADD_METHOD_TO(RestfulPermissionCategoryCtrl::create, "/api/permissioncategory", Post, Options, "AuthFilter");
  // ADD_METHOD_TO(RestfulPermissionCategoryCtrl::update,"/api/permissioncategory",Put,Options,"AuthFilter");
  METHOD_LIST_END

  void getOne(const HttpRequestPtr &req,
              std::function<void(const HttpResponsePtr &)> &&callback,
              PermissionCategory::PrimaryKeyType &&id);
  void updateOne(const HttpRequestPtr &req,
                 std::function<void(const HttpResponsePtr &)> &&callback,
                 PermissionCategory::PrimaryKeyType &&id);
  void deleteOne(const HttpRequestPtr &req,
                 std::function<void(const HttpResponsePtr &)> &&callback,
                 PermissionCategory::PrimaryKeyType &&id);
  void get(const HttpRequestPtr &req,
           std::function<void(const HttpResponsePtr &)> &&callback);
  void create(const HttpRequestPtr &req,
              std::function<void(const HttpResponsePtr &)> &&callback);
};
