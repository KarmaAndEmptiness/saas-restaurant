/**
 *
 *  RestfulRoleCtrl.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include "RestfulRoleCtrlBase.h"

#include "Role.h"
using namespace drogon;
using namespace drogon_model::saas_restaurant;
/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the role table.
 */

class RestfulRoleCtrl : public drogon::HttpController<RestfulRoleCtrl>, public RestfulRoleCtrlBase
{
public:
  METHOD_LIST_BEGIN
  ADD_METHOD_TO(RestfulRoleCtrl::getOne, "/api/role/{1}", Get, Options, "AuthFilter");
  ADD_METHOD_TO(RestfulRoleCtrl::updateOne, "/api/role/{1}", Put, Options, "AuthFilter");
  ADD_METHOD_TO(RestfulRoleCtrl::deleteOne, "/api/role/{1}", Delete, Options, "AuthFilter");
  ADD_METHOD_TO(RestfulRoleCtrl::get, "/api/role", Get, Options, "AuthFilter");
  ADD_METHOD_TO(RestfulRoleCtrl::create, "/api/role", Post, Options, "AuthFilter");
  // ADD_METHOD_TO(RestfulRoleCtrl::update,"/api/role",Put,Options,"AuthFilter");
  METHOD_LIST_END

  void getOne(const HttpRequestPtr &req,
              std::function<void(const HttpResponsePtr &)> &&callback,
              Role::PrimaryKeyType &&id);
  void updateOne(const HttpRequestPtr &req,
                 std::function<void(const HttpResponsePtr &)> &&callback,
                 Role::PrimaryKeyType &&id);
  void deleteOne(const HttpRequestPtr &req,
                 std::function<void(const HttpResponsePtr &)> &&callback,
                 Role::PrimaryKeyType &&id);
  void get(const HttpRequestPtr &req,
           std::function<void(const HttpResponsePtr &)> &&callback);
  void create(const HttpRequestPtr &req,
              std::function<void(const HttpResponsePtr &)> &&callback);
};
